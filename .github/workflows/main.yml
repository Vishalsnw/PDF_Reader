name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Configure Gradle
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties << EOL
          org.gradle.jvmargs=-Xmx4g
          org.gradle.parallel=true
          android.useAndroidX=true
          android.enableJetifier=true
          EOL

      - name: Generate debug keystore
        run: |
          mkdir -p .android
          keytool -genkeypair \
            -keystore .android/debug.keystore \
            -storepass android \
            -keypass android \
            -alias androiddebugkey \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Android Debug, O=Android, C=US"

      - name: Build APK and Save Logs
        continue-on-error: true
        run: |
          chmod +x ./gradlew
          ./gradlew clean assembleRelease --stacktrace --info > build_output.txt 2>&1 || true
          grep -E "e: .*\.kt:[0-9]+:[0-9]+|error:|Unresolved reference:|cannot find symbol|Exception|Caused by|Execution failed|resource linking failed" \
            build_output.txt > errors_only.txt || true

      - name: Upload All Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs-${{ github.run_number }}
          path: |
            build_output.txt
            errors_only.txt

      - name: List APKs
        run: find . -name "*.apk" || true

      - name: Sign APK if exists
        run: |
          APK_PATH="app/build/outputs/apk/release/app-release-unsigned.apk"
          if [ -f "$APK_PATH" ]; then
            ZIPALIGN=$(find $ANDROID_HOME/build-tools -name zipalign | sort -r | head -n 1)
            APKSIGNER=$(find $ANDROID_HOME/build-tools -name apksigner | sort -r | head -n 1)

            $ZIPALIGN -v -p 4 "$APK_PATH" aligned.apk
            $APKSIGNER sign \
              --ks .android/debug.keystore \
              --ks-pass pass:android \
              --key-pass pass:android \
              --out Pdf_Reader-release-signed.apk \
              aligned.apk

            echo "SIGNED_APK=Pdf_Reader-release-signed.apk" >> $GITHUB_ENV
          else
            echo "‚ùå APK not found, skipping signing step."
          fi

      - name: Upload APK
        if: env.SIGNED_APK
        uses: actions/upload-artifact@v4
        with:
          name: Pdf_Reader-APK-${{ github.run_number }}
          path: ${{ env.SIGNED_APK }}
          retention-days: 30
